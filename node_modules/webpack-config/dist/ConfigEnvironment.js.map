{"version":3,"sources":["../src/ConfigEnvironment.js"],"names":["ConfigEnvironment","setAll","values","forEach","obj","key","value","set","valueOf","get","call","getOrDefault","defaultValue"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAKA;;;;AAIA,MAAMA,iBAAN,uBAAoC;AAChC;;;;AAIAC,WAAO,GAAGC,MAAV,EAAkB;AACdA,eAAOC,OAAP,CAAeC,OAAO;AAAA;AAAA;AAAA;;AAAA;AAClB,gEAA2B,uBAAeA,GAAf,CAA3B,4GAAgD;AAAA;;AAAA;;AAAA,0BAApCC,GAAoC;AAAA,0BAA/BC,KAA+B;;AAC5C,yBAAKC,GAAL,CAASF,GAAT,EAAcC,KAAd;AACH;AAHiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIrB,SAJD;;AAMA,eAAO,IAAP;AACH;;AAED;;;;AAIAE,YAAQH,GAAR,EAAa;AACT,cAAMC,QAAQ,KAAKG,GAAL,CAASJ,GAAT,CAAd;;AAEA,eAAO,wBAAWC,KAAX,IAAoBA,MAAMI,IAAN,CAAW,IAAX,EAAiB,IAAjB,CAApB,GAA6CJ,KAApD;AACH;;AAED;;;;;AAKAK,iBAAaN,GAAb,EAAkBO,YAAlB,EAAgC;AAC5B,cAAMN,QAAQ,KAAKE,OAAL,CAAaH,GAAb,CAAd;;AAEA,eAAO,yBAAYC,KAAZ,IAAqBM,YAArB,GAAoCN,KAA3C;AACH;AAlC+B;;kBAqCrBN,iB","file":"ConfigEnvironment.js","sourcesContent":["import {\n    isFunction,\n    isUndefined\n} from 'lodash';\n\n/**\n * @class\n * @extends {Map}\n */\nclass ConfigEnvironment extends Map {\n    /**\n     * @param {...Object<String,*>} values\n     * @returns {ConfigEnvironment}\n     */\n    setAll(...values) {\n        values.forEach(obj => {\n            for (const [key, value] of Object.entries(obj)) {\n                this.set(key, value);\n            }\n        });\n\n        return this;\n    }\n\n    /**\n     * @param {*} key\n     * @returns {*}\n     */\n    valueOf(key) {\n        const value = this.get(key);\n\n        return isFunction(value) ? value.call(this, this) : value;\n    }\n\n    /**\n     * @param {*} key\n     * @param {*} [defaultValue]\n     * @returns {*}\n     */\n    getOrDefault(key, defaultValue) {\n        const value = this.valueOf(key);\n\n        return isUndefined(value) ? defaultValue : value;\n    }\n}\n\nexport default ConfigEnvironment;\n"]}